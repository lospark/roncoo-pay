<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- ======================================================================== -->
	<!-- 龙果学院 (www.roncoo.com) 超级教程系列 -->
	<!-- 《微服务架构的分布式事务解决方案》视频教程 -->
	<!-- 讲师：吴水成（水到渠成），840765167@qq.com -->
	<!-- 课程地址：http://www.roncoo.com/course/view/7ae3d7eddc4742f78b0548aa8bd9ccdb -->
	<!-- ======================================================================== -->

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="redPacketDataSource"/>
        <property name="mapperLocations" value="classpath*:config/sqlmap/main/sample-dubbo-*.xml"/>
    </bean>

    <bean id="redPacketAccountDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface"
                  value="org.mengyun.tcctransaction.sample.dubbo.redpacket.infrastructure.dao.RedPacketAccountDao"></property>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>

   <bean id="tradeOrderDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface"
                  value="org.mengyun.tcctransaction.sample.dubbo.redpacket.infrastructure.dao.TradeOrderDao"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>
    
    <!--<bean class="org.mengyun.tcctransaction.spring.recover.DefaultRecoverConfig">-->
    <!--<property name="maxRetryCount" value="30"/>-->
    <!--<property name="recoverDuration" value="120"/>-->
    <!--<property name="cronExpression" value="0 */1 * * * ?"/>-->
    <!--</bean>-->

	<!-- 使用SpringJdbc事务库 -->
    <bean id="transactionRepository"
          class="org.mengyun.tcctransaction.spring.repository.SpringJdbcTransactionRepository">
        <property name="dataSource" ref="tccDataSource"/>
        <property name="domain" value="REDPACKET"/>
        <property name="tbSuffix" value="_RED"/>
    </bean>

    <!--<bean id="transactionRepository" class="org.mengyun.tcctransaction.repository.RedisTransactionRepository">-->
    <!--<property name="keyPrefix" value="TCC:RED:"/>-->
    <!--<property name="jedisPool" ref="jedisPool"/>-->
    <!--</bean>-->

    <!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
    <!--<property name="maxTotal" value="1000"/>-->
    <!--<property name="maxWaitMillis" value="1000"/>-->
    <!--</bean>-->

    <!--<bean id="jedisPool" class="redis.clients.jedis.JedisPool">-->
    <!--<constructor-arg index="0" ref="jedisPoolConfig"/>-->
    <!--<constructor-arg index="1" value="127.0.0.1"/>-->
    <!--<constructor-arg index="2" value="6379" type="int"/>-->
    <!--<constructor-arg index="3" value="1000" type="int"/>-->
    <!--<constructor-arg index="4" type="java.lang.String">-->
    <!--<null/>-->
    <!--</constructor-arg>-->
    <!--<constructor-arg index="5" value="0" type="int"/>-->
    <!--</bean>-->

</beans>